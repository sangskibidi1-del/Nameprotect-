-- MM2 Advanced Script v2.2 LocalScript
-- Combined by Quyendz & [YourName] | Date: October 06, 2025 | Time: 09:50 PM +07
-- Features: ESP with debounce & color cache, Auto Aim with FOV & head detect, Auto Kill with priority,
--           Auto Pick with firetouchinterest, Watchdog with FPS drop detection, Debug Overlay, Persistent Config
-- Usage: Copy-paste into executor (e.g., Codex) and run on a private MM2 server. Press P to toggle UI.
-- Note: Test on private server to avoid bans. Requires VirtualInputManager support.
-- Credits: Developed by Quyendz | Reviewed and enhanced by [YourName]

-- Inline Modules
local Modules = {}
local Utils = {}

-- config.lua (Inline)
do
    local Config = {
        -- ESP
        ESPInnocentEnabled = false,
        ESPSheriffEnabled = false,
        ESPMurdererEnabled = false,
        -- Combat
        AutoAimEnabled = false,
        AutoPickGunEnabled = false,
        AutoKillEnabled = false,
        -- Movement
        NoclipEnabled = false,
        JumpPower = 50,
        WalkSpeed = 16,
        FlySpeed = 50,
        -- Timing / tuning
        ShootDelay = 0.5,
        KillDistance = 30,
        UpdateDelay = 0.1, -- default update delay
        -- UI
        DebugMode = false,
        Theme = "Dark",
        AutoSave = true,
        -- Colors
        RoleColors = {
            Innocent = Color3.fromRGB(0, 255, 0),
            Sheriff = Color3.fromRGB(0, 0, 255),
            Murderer = Color3.fromRGB(255, 0, 0)
        }
    }
    Modules.Config = Config
end

-- utils/system.lua (Inline)
do
    local System = {}
    function System.log(msg)
        pcall(function() print("[MM2 System] " .. tostring(msg)) end)
    end
    function System.dynamicWait()
        local ok, fpsStat = pcall(function() return game:GetService("Stats").Workspace.FPS end)
        local fps = (ok and fpsStat and fpsStat:GetValue()) or 60
        return fps < 30 and 0.25 or 0.1
    end
    function System.saveConfig(config)
        local ok, writeok = pcall(function()
            if writefile then
                writefile("MM2_Advanced_config.json", game:GetService("HttpService"):JSONEncode(config))
                return true
            else
                getgenv().MM2_Config = config
                return false
            end
        end)
        return ok and writeok
    end
    Utils.System = System
end

-- modules/esp.lua (Inline)
do
    local ESP = {}
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local LocalPlayer = Players.LocalPlayer
    local highlights = {}
    local roleCache = {}
    local colorCache = {}
    local lastApply = 0
    local function inferRole(plr)
        if not plr then return "Innocent" end
        local backpack = plr:FindFirstChild("Backpack")
        local character = plr.Character
        if backpack and (backpack:FindFirstChild("Knife") or backpack:FindFirstChild("Gun")) then
            if backpack:FindFirstChild("Knife") then return "Murderer" end
            if backpack:FindFirstChild("Gun") then return "Sheriff" end
        end
        if character then
            if character:FindFirstChild("Knife") then return "Murderer" end
            if character:FindFirstChild("Gun") then return "Sheriff" end
        end
        return "Innocent"
    end
    local function clearHighlights()
        for plr, hl in pairs(highlights) do
            if hl and hl.Parent then pcall(function() hl:Destroy() end) end
        end
        highlights = {}
    end
    local function addHighlight(plr, color)
        if not plr or not plr.Character then return end
        if highlights[plr] and highlights[plr].Parent then
            highlights[plr].OutlineColor = color
            return
        end
        local ok, hl = pcall(function()
            local h = Instance.new("Highlight")
            h.Adornee = plr.Character
            h.FillTransparency = 1
            h.OutlineColor = color
            h.OutlineTransparency = 0
            h.Parent = plr.Character
            return h
        end)
        if ok and hl then highlights[plr] = hl end
    end
    function ESP.applyESP(Config)
        if not (Config.ESPInnocentEnabled or Config.ESPSheriffEnabled or Config.ESPMurdererEnabled) then
            clearHighlights()
            return
        end
        if os.clock() - lastApply < (Config.UpdateDelay or 0.1) then return end
        lastApply = os.clock()
        clearHighlights()
        for _, plr in ipairs(Players:GetPlayers()) do
            if plr ~= LocalPlayer then
                local role = inferRole(plr)
                roleCache[plr] = role
                local enabled = (role == "Innocent" and Config.ESPInnocentEnabled) or
                                (role == "Sheriff" and Config.ESPSheriffEnabled) or
                                (role == "Murderer" and Config.ESPMurdererEnabled)
                if enabled then
                    local color = colorCache[role] or Config.RoleColors[role] or Color3.fromRGB(255,255,255)
                    colorCache[role] = color
                    addHighlight(plr, color)
                end
            end
        end
    end
    function ESP.init(Config, Utils)
        task.spawn(function()
            while task.wait(Config.UpdateDelay or 0.1) do
                pcall(function()
                    ESP.applyESP(Config)
                end)
            end
        end)
        Players.PlayerAdded:Connect(function(plr)
            plr.CharacterAdded:Connect(function()
                task.wait(1)
                ESP.applyESP(Config)
            end)
        end)
        if LocalPlayer.Character then
            LocalPlayer.CharacterAdded:Connect(function()
                task.wait(1)
                ESP.applyESP(Config)
            end)
        end
    end
    Modules.ESP = ESP
end

-- modules/combat.lua (Inline)
do
    local Combat = {}
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local VirtualInputManager
    pcall(function() VirtualInputManager = game:GetService("VirtualInputManager") end)
    local LocalPlayer = Players.LocalPlayer
    local Camera = workspace.CurrentCamera
    local lastShot = 0
    local function unitSafe(v)
        local ok, u = pcall(function() return v.Unit end)
        return ok and u or (v.magnitude > 0 and v / v.magnitude or Vector3.new(0,0,0))
    end
    local function inFOV(targetPos, maxAngle)
        local dir = unitSafe(targetPos - Camera.CFrame.Position)
        local look = Camera.CFrame.LookVector
        local dot = math.clamp(dir:Dot(look), -1, 1)
        local angle = math.deg(math.acos(dot))
        return angle <= maxAngle
    end
    local function tryFire()
        if not VirtualInputManager then return false end
        local ok = pcall(function()
            VirtualInputManager:SendMouseButtonEvent(0,0,0,true,game,1)
            task.wait(0.06)
            VirtualInputManager:SendMouseButtonEvent(0,0,0,false,game,1)
        end)
        return ok
    end
    local function attemptPickup(tool)
        local success = false
        local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if root and tool and tool:IsA("Tool") and tool:FindFirstChild("Handle") then
            local ok, _ = pcall(function()
                if firetouchinterest then
                    firetouchinterest(tool.Handle, root, 0)
                    firetouchinterest(tool.Handle, root, 1)
                    success = true
                else
                    tool.Handle.CFrame = root.CFrame
                    success = true
                end
            end)
        end
        return success
    end
    function Combat.autoAimLoop(Config, Utils)
        while task.wait(Utils.System.dynamicWait()) do
            if not Config.AutoAimEnabled then continue end
            if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then continue end
            if tick() - lastShot < (Config.ShootDelay or 0.5) then continue end
            local targetHead, bestDist
            for _, plr in ipairs(Players:GetPlayers()) do
                if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("Humanoid") and plr.Character.Humanoid.Health > 0 then
                    local head = plr.Character:FindFirstChild("Head") or plr.Character:FindFirstChild("HumanoidRootPart")
                    if head and inFOV(head.Position, 30) then
                        local dist = (head.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                        if not bestDist or dist < bestDist then
                            targetHead = head
                            bestDist = dist
                        end
                    end
                end
            end
            if targetHead then
                local newCFrame = CFrame.new(Camera.CFrame.Position, targetHead.Position)
                Camera.CFrame = Camera.CFrame:Lerp(newCFrame, 0.25)
                if inFOV(targetHead.Position, 20) and tick() - lastShot >= (Config.ShootDelay or 0.5) then
                    local fired = tryFire()
                    if fired then lastShot = tick() end
                end
            end
        end
    end
    function Combat.autoPickLoop(Config, Utils)
        while task.wait(Config.UpdateDelay or 0.1) do
            if not Config.AutoPickGunEnabled then continue end
            if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then continue end
            for _, obj in ipairs(workspace:GetChildren()) do
                if obj.Name == "Gun" and obj:IsA("Tool") then
                    attemptPickup(obj)
                    break
                end
            end
        end
    end
    function Combat.autoKillLoop(Config, Utils)
        while task.wait(Config.UpdateDelay or 0.1) do
            if not Config.AutoKillEnabled then continue end
            if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then continue end
            if not LocalPlayer.Character:FindFirstChild("Knife") then continue end
            local myRole = "Murderer"
            local target
            local best = math.huge
            for _, plr in ipairs(Players:GetPlayers()) do
                if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("Humanoid") then
                    local h = plr.Character:FindFirstChild("HumanoidRootPart")
                    if h and plr.Character.Humanoid.Health > 0 then
                        local role = (plr.Backpack and (plr.Backpack:FindFirstChild("Gun") and "Sheriff" or plr.Backpack:FindFirstChild("Knife") and "Murderer")) or (plr.Character:FindFirstChild("Gun") and "Sheriff" or plr.Character:FindFirstChild("Knife") and "Murderer") or "Innocent"
                        local priority = (role == "Sheriff") and 0 or 1
                        local dist = (h.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                        if dist <= (Config.KillDistance or 30) and (priority < best or (priority == best and dist < best)) then
                            target = plr
                            best = priority
                        end
                    end
                end
            end
            if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                pcall(function()
                    local knife = LocalPlayer.Character:FindFirstChild("Knife")
                    if knife and knife:FindFirstChild("Handle") then
                        knife.Handle.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,-2)
                        if knife.Activate then pcall(function() knife:Activate() end) end
                    end
                end)
            end
        end
    end
    function Combat.init(Config, Utils)
        if not pcall(function() return game:GetService("VirtualInputManager") end) then
            if Config.DebugMode then Utils.System.log("[Combat] VirtualInputManager not available — AutoAim will be disabled.") end
            Config.AutoAimEnabled = false
        end
        task.spawn(function() Combat.autoAimLoop(Config, Utils) end)
        task.spawn(function() Combat.autoPickLoop(Config, Utils) end)
        task.spawn(function() Combat.autoKillLoop(Config, Utils) end)
    end
    Modules.Combat = Combat
end

-- modules/watchdog.lua (Inline)
do
    local Watchdog = {}
    local RunService = game:GetService("RunService")
    function Watchdog.init(Config, Utils)
        task.spawn(function()
            local last = tick()
            while task.wait(10) do
                local start = tick()
                RunService.RenderStepped:Wait()
                local delta = tick() - start
                local fps = delta > 0 and 1 / delta or 60
                if fps < 30 then
                    if Config.DebugMode then Utils.System.log("⚠️ FPS drop to " .. math.floor(fps) .. ", pausing 5s") end
                    task.wait(5)
                end
            end
        end)
    end
    Modules.Watchdog = Watchdog
end

-- modules/ui.lua (Inline)
do
    local UI = {}
    local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
    local Players = game:GetService("Players")
    local UserInputService = game:GetService("UserInputService")
    local LocalPlayer = Players.LocalPlayer
    local Camera = workspace.CurrentCamera
    local debugOverlay = nil
    local function createDebugOverlay(Config)
        if debugOverlay then debugOverlay:Destroy() end
        debugOverlay = Instance.new("ScreenGui")
        local frame = Instance.new("Frame")
        local fpsLabel = Instance.new("TextLabel")
        local pingLabel = Instance.new("TextLabel")
        local activeLabel = Instance.new("TextLabel")
        debugOverlay.Parent = game:GetService("CoreGui")
        frame.Size = UDim2.new(0, 200, 0, 100)
        frame.Position = UDim2.new(1, -210, 0, 10)
        frame.BackgroundTransparency = 0.5
        frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        frame.Draggable = true
        fpsLabel.Parent = frame
        fpsLabel.Size = UDim2.new(1, 0, 0, 30)
        fpsLabel.Text = "FPS: Calculating..."
        fpsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        pingLabel.Parent = frame
        pingLabel.Size = UDim2.new(1, 0, 0, 30)
        pingLabel.Position = UDim2.new(0, 0, 0, 30)
        pingLabel.Text = "Ping: Calculating..."
        pingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        activeLabel.Parent = frame
        activeLabel.Size = UDim2.new(1, 0, 0, 40)
        activeLabel.Position = UDim2.new(0, 0, 0, 60)
        activeLabel.Text = "Active: None"
        activeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        local lastUpdate = tick()
        local frameCount = 0
        RunService.RenderStepped:Connect(function()
            frameCount = frameCount + 1
            if tick() - lastUpdate >= 1 then
                fpsLabel.Text = "FPS: " .. math.floor(frameCount / (tick() - lastUpdate))
                frameCount = 0
                lastUpdate = tick()
            end
            pingLabel.Text = "Ping: " .. math.floor(game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue()) .. "ms"
            local activeModules = {}
            if Config.AutoAimEnabled then table.insert(activeModules, "Aim") end
            if Config.AutoKillEnabled then table.insert(activeModules, "Kill") end
            if Config.AutoPickGunEnabled then table.insert(activeModules, "Pick") end
            if Config.NoclipEnabled then table.insert(activeModules, "Noclip") end
            activeLabel.Text = "Active: " .. table.concat(activeModules, ", ") or "None"
        end)
        return frame
    end
    function UI.init(Config, Utils)
        local Window = Rayfield:CreateWindow({
            Name = "MM2 Advanced v2.2",
            LoadingTitle = "Đang tải MM2 Script",
            LoadingSubtitle = "by Quyendz",
            ConfigurationSaving = { Enabled = false },
            Discord = { Enabled = false, Invite = "noinvitelinkyet", RememberJoins = true },
            Theme = Config.Theme or "Dark",
            Draggable = true
        })
        local ESPTab = Window:CreateTab("ESP", 4483362458)
        ESPTab:CreateToggle({
            Name = "ESP Người Dân (Xanh lá)",
            CurrentValue = Config.ESPInnocentEnabled,
            Callback = function(Value)
                Config.ESPInnocentEnabled = Value
                createDebugOverlay(Config)
            end
        })
        ESPTab:CreateToggle({
            Name = "ESP Cảnh Sát (Xanh dương)",
            CurrentValue = Config.ESPSheriffEnabled,
            Callback = function(Value)
                Config.ESPSheriffEnabled = Value
                createDebugOverlay(Config)
            end
        })
        ESPTab:CreateToggle({
            Name = "ESP Sát Nhân (Đỏ)",
            CurrentValue = Config.ESPMurdererEnabled,
            Callback = function(Value)
                Config.ESPMurdererEnabled = Value
                createDebugOverlay(Config)
            end
        })
        local MovementTab = Window:CreateTab("Di Chuyển", 4483362458)
        MovementTab:CreateSlider({
            Name = "Chiều Cao Nhảy",
            Range = {50, 200},
            Increment = 1,
            CurrentValue = Config.JumpPower,
            Callback = function(Value)
                Config.JumpPower = Value
            end
        })
        MovementTab:CreateSlider({
            Name = "Tốc Độ Chạy",
            Range = {16, 100},
            Increment = 1,
            CurrentValue = Config.WalkSpeed,
            Callback = function(Value)
                Config.WalkSpeed = Value
            end
        })
        MovementTab:CreateToggle({
            Name = "NoClip",
            CurrentValue = Config.NoclipEnabled,
            Callback = function(Value)
                Config.NoclipEnabled = Value
                createDebugOverlay(Config)
            end
        })
        local CombatTab = Window:CreateTab("Chiến Đấu", 4483362458)
        CombatTab:CreateToggle({
            Name = "Tự Nhắm và Bắn Sát Nhân",
            CurrentValue = Config.AutoAimEnabled,
            Callback = function(Value)
                Config.AutoAimEnabled = Value
                createDebugOverlay(Config)
            end
        })
        CombatTab:CreateToggle({
            Name = "Tự Nhặt Súng",
            CurrentValue = Config.AutoPickGunEnabled,
            Callback = function(Value)
                Config.AutoPickGunEnabled = Value
                createDebugOverlay(Config)
            end
        })
        CombatTab:CreateToggle({
            Name = "Tự Giết (Khi Là Sát Nhân)",
            CurrentValue = Config.AutoKillEnabled,
            Callback = function(Value)
                Config.AutoKillEnabled = Value
                createDebugOverlay(Config)
            end
        })
        local SettingsTab = Window:CreateTab("Cài đặt", 4483362458)
        SettingsTab:CreateToggle({
            Name = "Chế độ Debug",
            CurrentValue = Config.DebugMode,
            Callback = function(Value)
                Config.DebugMode = Value
                createDebugOverlay(Config)
            end
        })
        SettingsTab:CreateSlider({
            Name = "Độ trễ cập nhật (s)",
            Range = {0.1, 0.5},
            Increment = 0.1,
            CurrentValue = Config.UpdateDelay,
            Callback = function(Value)
                Config.UpdateDelay = Value
                createDebugOverlay(Config)
            end
        })
        local hour = os.date("*t").hour
        Config.Theme = hour >= 18 or hour < 6 and "Dark" or "Light"
        Window:ApplyTheme(Config.Theme)
        UserInputService.InputBegan:Connect(function(input, gamePr
